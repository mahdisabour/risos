# Generated by Django 3.1.7 on 2021-12-01 11:02

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extendProfile', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BadColorReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('rate_size', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('actual_date', models.DateField(blank=True, default=datetime.datetime(2022, 3, 1, 11, 2, 35, 705960), null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('reciept_image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('rate_size', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='LabPic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('pic', models.ImageField(blank=True, null=True, upload_to='labpics/')),
                ('number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('status', models.CharField(max_length=50)),
                ('message', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Updated at')),
                ('expected_date', models.DateField(blank=True, default=datetime.datetime(2022, 1, 30, 11, 2, 35, 704575), null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('processing_invoice ready', 'Invoice Ready'), ('processing_accept', 'Accept'), ('processing_reject', 'Reject'), ('processing_reject and resend', 'Reject And Resend'), ('processing_molding', 'Molding'), ('processing_ditch', 'Ditch'), ('processing_scan', 'Scan'), ('processing_water wax', 'Water Wax'), ('processing_designing', 'Designing'), ('processing_print/milling', 'Print/Milling'), ('processing_ceramic', 'Ceramic'), ('ready', 'ready')], default='sent', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientPic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated at')),
                ('smile_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('full_smile_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('side_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('optional_image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('central_size', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ToothSevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tooth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('tooth_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(11), django.core.validators.MaxValueValidator(48)])),
                ('cl', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_bad_color', models.BooleanField(default=False)),
                ('bad_color_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='businessLogic.badcolorreason')),
                ('related_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Teeth', to='businessLogic.service')),
                ('tooth_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='businessLogic.toothsevice')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=50)),
                ('messgae_status', models.CharField(choices=[('read', 'Read'), ('unread', 'Unread')], default='unread', max_length=50)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='extendProfile.profile')),
                ('related_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businessLogic.order')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='extendProfile.profile')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='businessLogic.servicecategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='related_doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='businessLogic.doctor'),
        ),
        migrations.AddField(
            model_name='service',
            name='related_patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businessLogic.patient'),
        ),
    ]
